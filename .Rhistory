PHQ_total ~ gender * sedentary_minutes +
gender * age +
has_asthma * age +
race + birth_country + heavy_drinker +
diabetes + has_liver + poverty_ratio,
data = analysis_data
)
summary(model_nb_interact3)
# full model with all only one interaction (Gender Ã— Age)
model_nb_interact1 <- glm.nb(
PHQ_total ~ sedentary_minutes +
gender * age +
has_asthma+
race + birth_country + heavy_drinker +
diabetes + has_liver + poverty_ratio,
data = analysis_data
)
# Compare AIC with previous full model
AIC(model_nb, model_nb_interact3, model_nb_interact1)
############################## Model Diagnostics ###############################
############ 1.Goodness of fit #################################################
# Residual Deviance and Degrees of Freedom
resid_dev <- deviance(model_nb_interact1)
df_resid <- df.residual(model_nb_interact1)
cat("Residual Deviance:", resid_dev, "\n")
cat("Degrees of Freedom:", df_resid, "\n")
cat("Ratio (Deviance / DF):", resid_dev / df_resid, "\n")
# AIC
aic_val <- AIC(model_nb_interact1)
cat("AIC:", aic_val, "\n")
# Log-likelihood
loglik_val <- logLik(model_nb_interact1)
cat("Log-Likelihood:", loglik_val, "\n")
############ 2.Residual Diagnostics ############################################
# Residuals
df_diag <- data.frame(
index = 1:nrow(analysis_data),
pearson = residuals(model_nb_interact1, type = "pearson"),
deviance = residuals(model_nb_interact1, type = "deviance"),
fitted = fitted(model_nb_interact1),
observed = analysis_data$PHQ_total,
cooks = cooks.distance(model_nb_interact1)
)
# 1. Pearson residuals vs. index
pR1 <- ggplot(df_diag, aes(x = index, y = pearson)) +
geom_point(alpha = 0.4, color = "#5C88DA", size = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
theme_standard+
labs(title = "Pearson Residuals", x = "Observation Index", y = "Residual")
# 2. Fitted vs Observed
pR2 <- ggplot(df_diag, aes(x = fitted, y = observed)) +
geom_point(alpha = 0.4, color = "#84BD00", size = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
theme_standard+
labs(title = "Fitted vs Observed", x = "Fitted Values", y = "Observed PHQ_total")
print(pR1 + pR2)
ggsave("graph/Pearson_Fitted.png", width = 6, height = 4, dpi = 300)
# 3. QQ plot of deviance residuals
pR3 <- ggplot(df_diag, aes(sample = deviance)) +
stat_qq(alpha = 0.4, color = "#FFCD00", size = 0.7) +
stat_qq_line(color = "red") +
theme_standard+
labs(title = "QQ Plot of Deviance Residuals")
# 4. Cook's Distance
pR4 <- ggplot(df_diag, aes(x = index, y = cooks)) +
geom_point(alpha = 0.4, color = "#00B5E2", size = 0.7) +
geom_hline(yintercept = 4 / nrow(df_diag), linetype = "dashed", color = "red") +
theme_standard+
labs(title = "Cook's Distance", y = "Cook's D", x = "Observation Index")
print(pR3 + pR4)
ggsave("graph/QQ_cook.png", width = 6, height = 4, dpi = 300)
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE)
library(ggplot2)
library(patchwork)
library(dplyr)
library(forcats)
library(MASS)
library(broom)
library(knitr)
library(kableExtra)
library(stringr)
# improt data and summary
analysis_data <- readRDS("../data/processed/analysis_data.rds")
summary(analysis_data)
# choose the reference category for categorical variable
analysis_data$race <- relevel(analysis_data$race, ref = "Non-Hispanic White")
analysis_data$edu <- relevel(analysis_data$edu, ref = "College graduate or above")
analysis_data$birth_country <- relevel(analysis_data$birth_country, ref = "US-born")
# drop the variable with high missing rate
analysis_data <- analysis_data[, !names(analysis_data) %in% c("drinks_per_day", "hay_fever")]
mean_phq <- mean(analysis_data$PHQ_total, na.rm = TRUE)
theme_standard <- theme_minimal(base_size = 11) +
theme(
plot.title = element_text(size = rel(1.0), face = "bold"),
plot.subtitle = element_text(size = rel(0.9)),
axis.title = element_text(size = rel(0.9)),
axis.text = element_text(size = rel(0.8))
)
ggplot(analysis_data, aes(x = PHQ_total)) +
geom_density(fill = "#5C88DA99", color = "#1f2d50", alpha = 0.7) +
geom_vline(xintercept = mean_phq, color = "red", linetype = "dashed", linewidth = 1) +
labs(
title = "Figure 1: Density Plot of PHQ Total Score",
subtitle = paste("Mean =", round(mean_phq, 2)),
x = "PHQ Total Score",
y = "Density"
) +
theme_standard
# Plot 2: Density by Gender
p2 <- ggplot(analysis_data, aes(x = PHQ_total, fill = gender)) +
geom_density(alpha = 0.5) +
labs(title = "Figure 2: PHQ Total Score by Gender", x = "PHQ Total Score", y = "Density") +
theme_standard
ggsave("../graph/F2_phq_density_by_gender.png", p2, width = 6, height = 4, dpi = 300)
# Plot 2: Violin by Asthma
p3 <- ggplot(analysis_data, aes(x = has_asthma, y = PHQ_total, fill = has_asthma)) +
geom_violin(trim = FALSE, alpha = 0.5) +
labs(title = "Figure 3: PHQ Total Score\nby Asthma Diagnosis", x = "Has Asthma", y = "PHQ Total") +
theme_standard+
theme(legend.position = "none")
ggsave("../graph/F3_phq_by_asthma.png", p3, width = 6, height = 4, dpi = 300)
print(p2 + p3)
custom_colors <- c( "#CC0C0099", "#5C88DA99", "#84BD0099", "#FFCD0099", "#7C878E99", "#00B5E299", "#00AF6699")
# Plot 4: Heavy Drinking
p4 <- ggplot(analysis_data, aes(x = heavy_drinker, y = PHQ_total, fill = heavy_drinker)) +
geom_boxplot() +
scale_fill_manual(values = custom_colors[1:length(unique(na.omit(analysis_data$heavy_drinker)))]) +
labs(title = "Figure 4: PHQ Total Score\n by Heavy Drinking", x = "Heavy Drinker", y = "PHQ Total") +
theme_standard +
theme(legend.position = "none")
ggsave("../graph/F4_phq_by_heavy_drinker.png", p4, width = 6, height = 4, dpi = 300)
# Plot 5: Liver Condition
p5 <- ggplot(analysis_data, aes(x = has_liver, y = PHQ_total, fill = has_liver)) +
geom_boxplot() +
scale_fill_manual(values = custom_colors[1:length(unique(na.omit(analysis_data$has_liver)))]) +
labs(title = "Figure 5: PHQ Total Score\n by Liver Condition", x = "Has Liver Condition", y = "PHQ Total") +
theme_standard +
theme(legend.position = "none")
ggsave("../graph/F5_phq_by_liver.png", p5, width = 6, height = 4, dpi = 300)
print(p4+p5)
# Plot 6: Race/Ethnicity
#create race label for better vis
analysis_data$race_label <- recode(analysis_data$race,
"Non-Hispanic White" = "Non\nHispanic\nWhite",
"Mexican American" = "Mexican\nAmerican",
"Non-Hispanic Asian" = "Non\nHispanic\nAsian",
"Non-Hispanic Black" = "Non\nHispanic\nBlack",
"Other Hispanic" = "Other\nHispanic",
"Other Race - Including Multi-Racial" = "Other Race\nMulti-Racial"
)
#boxplot
p6_1 <- ggplot(analysis_data, aes(x = race_label, y = PHQ_total, fill = race_label)) +
geom_boxplot() +
scale_fill_manual(values = custom_colors[1:length(unique(analysis_data$race_label))]) +
labs(title = "Figure 6:PHQ Total Score by Race", x = "Race/Ethnicity", y = "PHQ Total") +
theme_standard +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),
legend.position = "none")
#Pie Chart
race_dist <- analysis_data %>%
count(race_label) %>%
mutate(percentage = round(100 * n / sum(n), 1),
label = paste0(race_label, "\n", percentage, "%"))
p6_2 <- ggplot(race_dist, aes(x = "", y = n, fill = race_label)) +
geom_col(width = 1, color = "white") +
coord_polar(theta = "y") +
scale_fill_manual(values = custom_colors[1:nrow(race_dist)]) +
labs(title = "         Race Distribution") +
theme_void() +
theme_standard +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
(p6_1 | p6_2) + plot_layout(widths = c(1.7, 1))
ggsave("../graph/F6_phq_by_race&pie.png", width = 6, height = 4, dpi = 300)
# Summarise by has_asthma
asthma_summary <- analysis_data %>%
group_by(group = has_asthma) %>%
summarise(
count = n(),
mean_PHQ = round(mean(PHQ_total, na.rm = TRUE), 2),
median_PHQ = median(PHQ_total, na.rm = TRUE),
sd_PHQ = round(sd(PHQ_total, na.rm = TRUE), 2),
IQR_PHQ = IQR(PHQ_total, na.rm = TRUE)
) %>%
mutate(variable = "Has Asthma")
# Summarise by diabetes
diabetes_summary <- analysis_data %>%
group_by(group = diabetes) %>%
summarise(
count = n(),
mean_PHQ = round(mean(PHQ_total, na.rm = TRUE), 2),
median_PHQ = median(PHQ_total, na.rm = TRUE),
sd_PHQ = round(sd(PHQ_total, na.rm = TRUE), 2),
IQR_PHQ = IQR(PHQ_total, na.rm = TRUE)
) %>%
mutate(variable = "Diabetes")
# Summarise by birth_country
birth_summary <- analysis_data %>%
group_by(group = birth_country) %>%
summarise(
count = n(),
mean_PHQ = round(mean(PHQ_total, na.rm = TRUE), 2),
median_PHQ = median(PHQ_total, na.rm = TRUE),
sd_PHQ = round(sd(PHQ_total, na.rm = TRUE), 2),
IQR_PHQ = IQR(PHQ_total, na.rm = TRUE)
) %>%
mutate(variable = "Birth Country")
# Combine summaries
combined_summary <- bind_rows(asthma_summary, diabetes_summary, birth_summary) %>%
dplyr::select(variable, group, count, mean_PHQ, median_PHQ, sd_PHQ, IQR_PHQ)
# Display nicely
kable(
combined_summary,
caption = "Summary Statistics of PHQ9 Scores",
digits = 2,
align = "l"
)%>%
kableExtra::kable_styling(
latex_options = c("hold_position", "scale_down"),
full_width = FALSE
)
# sedentary_minutes
p7 <- ggplot(analysis_data %>% filter(!is.na(sedentary_minutes), !is.na(PHQ_total)),
aes(x = sedentary_minutes, y = PHQ_total)) +
geom_point(alpha = 0.4) +
geom_smooth(method = "loess", color = "blue") +
labs(title = "Figure 7: PHQ Total vs Sedentary Minutes",
x = "Sedentary Minutes", y = "PHQ Total") +
theme_standard
ggsave("../graph/F7_phq_by_sedentary.png", width = 6, height = 4, dpi = 300)
# poverty_ratio
p8 <- ggplot(analysis_data %>% filter(!is.na(poverty_ratio), !is.na(PHQ_total)),
aes(x = poverty_ratio, y = PHQ_total)) +
geom_point(alpha = 0.4) +
geom_smooth(method = "loess", color = "blue") +
labs(title = "Figure 8: PHQ Total vs Poverty Ratio",
x = "Poverty Ratio", y = "PHQ Total") +
theme_standard
ggsave("../graph/F8_phq_by_poverty_ratio.png", width = 6, height = 4, dpi = 300)
print(p7 + p8)
# fill the median for missing valuye
analysis_data <- analysis_data %>%
mutate(poverty_ratio = ifelse(is.na(poverty_ratio),
median(poverty_ratio, na.rm = TRUE),
poverty_ratio))
# Apply to each categorical variable, make NA as an answer
analysis_data$heavy_drinker <- fct_explicit_na(as.factor(analysis_data$heavy_drinker), na_level = "NA")
analysis_data$diabetes <- fct_explicit_na(as.factor(analysis_data$diabetes), na_level = "NA")
model_pois <- glm(PHQ_total ~ gender + race + birth_country + heavy_drinker +
diabetes + has_asthma + has_liver +
sedentary_minutes + poverty_ratio + age, family = poisson, data = analysis_data)
# Dispersion statistic
dispersion <- sum(residuals(model_pois, type = "pearson")^2) / df.residual(model_pois)
print(dispersion)
# Fit negative binomial model
model_nb <- glm.nb(
PHQ_total ~ gender + race + birth_country + heavy_drinker +
diabetes + has_asthma + has_liver +
sedentary_minutes + poverty_ratio +age,
data = analysis_data
)
# model list
models0 <- list(
"Poisson model" = model_pois,
"Negative Binomial model" = model_nb
)
# AIC & degree of freedom
aic_table0 <- purrr::map_df(models0, ~data.frame(
df = attr(logLik(.x), "df"),
AIC = AIC(.x)
), .id = "Model")
# tidy table
knitr::kable(
aic_table0,
caption = "AIC Comparison between Poisson and Negative Binomial Models",
digits = 2,
align = "l"
)%>%
kableExtra::kable_styling(
latex_options = c("hold_position", "scale_down"),
full_width = FALSE
)
# Extract, modify, and format
summary_table <- broom::tidy(model_nb) %>%
mutate(
term = str_replace(term, "raceOther Race - Including Multi-Racial", "raceOther"),
p.value = format.pval(p.value, digits = 4, eps = .Machine$double.eps),
sig = case_when(
as.numeric(p.value) < 0.001 ~ "***",
as.numeric(p.value) < 0.01  ~ "**",
as.numeric(p.value) < 0.05  ~ "*",
as.numeric(p.value) < 0.1   ~ ".",
TRUE                        ~ ""
)
)
# Display table
knitr::kable(
summary_table,
caption = "Summary of Negative Binomial Regression Coefficients",
digits = 4,
align = "l",
row.names = FALSE
) %>%
kable_styling(
latex_options = c("hold_position", "scale_down"),
full_width = FALSE
)
# Fit negative binomial model
model_nb_race <- glm.nb(
PHQ_total ~ gender + birth_country + heavy_drinker +
diabetes + has_asthma + has_liver +
sedentary_minutes + poverty_ratio +age,
data = analysis_data
)
model_nb_heavy_drink <- glm.nb(
PHQ_total ~ gender + race + birth_country +
diabetes + has_asthma + has_liver +
sedentary_minutes + poverty_ratio +age,
data = analysis_data
)
model_nb_diabetes <- glm.nb(
PHQ_total ~ gender + race + birth_country + heavy_drinker +
has_asthma + has_liver +
sedentary_minutes + poverty_ratio +age,
data = analysis_data
)
summary(model_nb)
# list of models
models <- list(
model_nb = model_nb,
model_nb_race = model_nb_race,
model_nb_heavy_drink = model_nb_heavy_drink,
model_nb_diabetes = model_nb_diabetes
)
# Extract df and AIC
aic_df <- purrr::map_df(models, function(m) {
data.frame(df = attr(logLik(m), "df"), AIC = AIC(m))
}, .id = "Model")
kable(aic_df, caption = "Negative Binomial Models Comparesion")%>%
kableExtra::kable_styling(
latex_options = c("hold_position", "scale_down"),
full_width = FALSE
)%>%
kableExtra::kable_styling(
latex_options = c("hold_position", "scale_down"),
full_width = FALSE
)
# p8: Gender Ã— Sedentary Minutes
p8 <- ggplot(analysis_data %>% filter(!is.na(sedentary_minutes), !is.na(PHQ_total)),
aes(x = sedentary_minutes, y = PHQ_total, color = gender)) +
geom_smooth(method = "loess", se = FALSE) +
labs(title = "Figure 8: Interaction \n Gender Ã— Sedentary Minutes",
x = "Sedentary Minutes", y = "PHQ Total") +
theme_standard
ggsave("../graph/F8_gender_by_sedentary.png", plot = p8, width = 6, height = 4, dpi = 300)
# p9: Gender Ã— Age
p9 <- ggplot(analysis_data %>% filter(!is.na(age), !is.na(PHQ_total)),
aes(x = age, y = PHQ_total, color = gender)) +
geom_smooth(method = "loess", se = FALSE) +
labs(title = "Figure 9: Interaction \n Gender Ã— Age",
x = "Age", y = "PHQ Total") +
theme_standard
ggsave("../graph/F9_gender_by_age.png", plot = p9, width = 6, height = 4, dpi = 300)
print(p8 + p9)
# Has Asthma Ã— Age
p10 <- ggplot(analysis_data %>% filter(!is.na(age), !is.na(PHQ_total), !is.na(has_asthma)),
aes(x = age, y = PHQ_total, color = has_asthma)) +
geom_smooth(method = "loess", se = FALSE) +
labs(title = "Figure 10: Interaction - Has Asthma Ã— Age",
x = "Age", y = "PHQ Total") +
theme_standard
ggsave("../graph/F10_asthma_by_age.png", plot = p10, width = 6, height = 4, dpi = 300)
print(p10)
model_nb_interact3 <- glm.nb(
PHQ_total ~ gender * sedentary_minutes +
gender * age +
has_asthma * age +
race + birth_country + heavy_drinker +
diabetes + has_liver + poverty_ratio,
data = analysis_data
)
summary(model_nb_interact3)
model_nb_interact1 <- glm.nb(
PHQ_total ~ sedentary_minutes +
gender * age +
has_asthma+
race + birth_country + heavy_drinker +
diabetes + has_liver + poverty_ratio,
data = analysis_data
)
models1 <- list(
"Full model" = model_nb,
"Model with all three interactions" = model_nb_interact3,
"Model with one interactions (gender * age)" = model_nb_interact1
)
aic_table1 <- purrr::map_df(models1, ~data.frame(
df = attr(logLik(.x), "df"),
AIC = AIC(.x)
), .id = "Model")
knitr::kable(
aic_table1,
caption = "Negative Binomial Models Comparison with Interaction Terms",
digits = 2,
align = "l"
)%>%
kableExtra::kable_styling(
latex_options = c("hold_position", "scale_down"),
full_width = FALSE
)
# Extract values
resid_dev <- deviance(model_nb_interact1)
df_resid <- df.residual(model_nb_interact1)
dev_df_ratio <- resid_dev / df_resid
aic_val <- AIC(model_nb_interact1)
loglik_val <- logLik(model_nb_interact1)
# Create data frame
fit_table <- data.frame(
Metric = c("Residual Deviance", "Degrees of Freedom",
"Deviance / DF", "AIC", "Log-Likelihood"),
Value = c(
round(resid_dev, 2),
df_resid,
round(dev_df_ratio, 4),
round(aic_val, 2),
round(loglik_val, 2)
)
)
# Display as table
knitr::kable(
fit_table,
caption = "Model Fit Statistics for Negative Binomial Regression",
align = "lr",
digits = 4
) %>%
kableExtra::kable_styling(
latex_options = c("hold_position", "scale_down"),
full_width = FALSE
)
# Residuals
df_diag <- data.frame(
index = 1:nrow(analysis_data),
pearson = residuals(model_nb_interact1, type = "pearson"),
deviance = residuals(model_nb_interact1, type = "deviance"),
fitted = fitted(model_nb_interact1),
observed = analysis_data$PHQ_total,
cooks = cooks.distance(model_nb_interact1)
)
# 1. Pearson residuals vs. index
pR1 <- ggplot(df_diag, aes(x = index, y = pearson)) +
geom_point(alpha = 0.4, color = "#5C88DA", size = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
theme_standard+
labs(title = "Pearson Residuals", x = "Observation Index", y = "Residual")
# 2. Fitted vs Observed
pR2 <- ggplot(df_diag, aes(x = fitted, y = observed)) +
geom_point(alpha = 0.4, color = "#84BD00", size = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
theme_standard+
labs(title = "Fitted vs Observed", x = "Fitted Values", y = "Observed PHQ_total")
print(pR1 + pR2)
ggsave("../graph/Pearson_Fitted.png", width = 6, height = 4, dpi = 300)
# 3. QQ plot of deviance residuals
pR3 <- ggplot(df_diag, aes(sample = deviance)) +
stat_qq(alpha = 0.4, color = "#FFCD00", size = 0.7) +
stat_qq_line(color = "red") +
theme_standard+
labs(title = "QQ Plot of Deviance Residuals")
# 4. Cook's Distance
pR4 <- ggplot(df_diag, aes(x = index, y = cooks)) +
geom_point(alpha = 0.4, color = "#00B5E2", size = 0.7) +
geom_hline(yintercept = 4 / nrow(df_diag), linetype = "dashed", color = "red") +
theme_standard+
labs(title = "Cook's Distance", y = "Cook's D", x = "Observation Index")
print(pR3 + pR4)
ggsave("../graph/QQ_cook.png", width = 6, height = 4, dpi = 300)
# Compute IRRs and CIs
IRRs <- exp(coef(model_nb_interact1))
confint_vals <- exp(confint(model_nb_interact1))
irr_table <- data.frame(
IRR = round(IRRs, 3),
CI_lower = round(confint_vals[, 1], 3),
CI_upper = round(confint_vals[, 2], 3)
)
print(irr_table)
# creat subset of analysis_data with all phq score greater than 3
analysis_data_sub <- analysis_data %>%
filter(PHQ_total > 3)
# final model with new dataset
model_nb_interact_sub <- glm.nb(
PHQ_total ~ sedentary_minutes +
gender * age +
has_asthma +
race + birth_country + heavy_drinker +
diabetes + has_liver + poverty_ratio,
data = analysis_data_sub
)
tibble(
Metric = c("AIC", "Residual Deviance", "Null Deviance", "Deviance / DF"),
Value = c(
model_nb_interact_sub$aic,
model_nb_interact_sub$deviance,
model_nb_interact_sub$null.deviance,
round(model_nb_interact_sub$deviance / model_nb_interact_sub$df.residual, 3)
)
) %>%
kable(caption = "Model Fit Summary for Subset (PHQ > 3)", digits = 2) %>%
kable_styling(full_width = FALSE, latex_options = "hold_position")
